{"version":3,"sources":["custom-image.ts","helpers.ts","App.tsx","index.tsx"],"names":["CustomImage","mimeType","this","split","Image","A4_PAPER_DIMENSIONS","A4_PAPER_RATIO","fileToImageURL","file","Promise","resolve","reject","image","type","onload","onerror","Error","src","URL","createObjectURL","generatePdfFromImages","images","doc","jsPDF","deletePage","forEach","imageDimensions","dimensions","width","height","imageRatio","imageScaleFactor","scaledImageHeight","imageDimensionsOnA4","addPage","addImage","imageType","pdfURL","output","window","open","App","React","useState","uploadedImages","setUploadedImages","handleImageUpload","useCallback","event","fileList","target","files","fileToImagePromises","Array","from","map","Helpers","all","then","cleanUpUploadedImages","revokeObjectURL","className","length","htmlFor","id","accept","onChange","style","display","multiple","onClick","disabled","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sSAAaA,EAAb,kDACE,WAAmBC,GAAmB,IAAD,8BACnC,gBADiBA,WAAkB,EADvC,sDAMI,OAAOC,KAAKD,SAASE,MAAM,KAAK,OANpC,eAAiCC,QCI3BC,EACG,IADHA,EAEI,IAGJC,EAAiBD,EAA4BA,EAqCtCE,EAAiB,SAACC,GAC7B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAQ,IAAIZ,EAAYQ,EAAKK,MAEnCD,EAAME,OAAS,WACbJ,EAAQE,IAGVA,EAAMG,QAAU,WACdJ,EAAO,IAAIK,MAAM,qCAGnBJ,EAAMK,IAAMC,IAAIC,gBAAgBX,OAIvBY,EAAwB,SAACC,GACpC,IAAMC,EAAM,IAAIC,IAChBD,EAAIE,WAAW,GAEfH,EAAOI,SAAQ,SAACb,GACd,IAAMc,EAnDyB,SAACC,GAGlC,GAFyBA,EAAWC,OAASD,EAAWE,OAGtD,MAAO,CACLD,MAAOvB,EACPwB,OACExB,GAA6BsB,EAAWC,MAAQD,EAAWE,SAIjE,IAAMC,EAAaH,EAAWC,MAAQD,EAAWE,OACjD,GAAIC,EAAaxB,EAAgB,CAC/B,IAAMyB,EACHzB,EAAiBqB,EAAWE,OAAUF,EAAWC,MAE9CI,EAAoB3B,EAA6B0B,EAEvD,MAAO,CACLF,OAAQG,EACRJ,MAAOI,EAAoBF,GAI/B,MAAO,CACLF,MAAOvB,GAA8BsB,EAAWE,OAASF,EAAWC,OACpEC,OAAQxB,GAyBgB4B,CAAoB,CAC1CL,MAAOhB,EAAMgB,MACbC,OAAQjB,EAAMiB,SAGhBP,EAAIY,UACJZ,EAAIa,SACFvB,EAAMK,IACNL,EAAMwB,WACL/B,EAA4BqB,EAAgBE,OAAS,GACrDvB,EAA6BqB,EAAgBG,QAAU,EACxDH,EAAgBE,MAChBF,EAAgBG,WAIpB,IAAMQ,EAASf,EAAIgB,OAAO,WAC1BC,OAAOC,KAAKH,EAAe,W,MCXdI,MAnEf,WAAgB,IAAD,EAC+BC,IAAMC,SAAwB,IAD7D,mBACNC,EADM,KACUC,EADV,KAGPC,EAAoBJ,IAAMK,aAG9B,SAACC,GACC,IAAMC,EAAWD,EAAME,OAAOC,MAExBC,GADYH,EAAWI,MAAMC,KAAKL,GAAY,IACdM,IAAIC,GAE1C/C,QAAQgD,IAAIL,GAAqBM,KAAKb,KAExC,CAACA,IAGGc,EAAwBjB,IAAMK,aAAY,WAC9CF,EAAkB,IAClBD,EAAenB,SAAQ,SAACb,GACtBM,IAAI0C,gBAAgBhD,EAAMK,UAE3B,CAAC4B,EAAmBD,IAEjBxB,EAAwBsB,IAAMK,aAAY,WAC9CS,EAA8BZ,GAC9Be,MACC,CAACf,EAAgBe,IAEpB,OACE,qCACE,wDAEA,qBAAKE,UAAU,mBAAf,SACGjB,EAAekB,OAAS,EACvBlB,EAAeW,KAAI,SAAC3C,GAAD,OACjB,qBAAqBK,IAAKL,EAAMK,IAAK4C,UAAU,kBAArCjD,EAAMK,QAGlB,wDAIJ,sBAAK4C,UAAU,oBAAf,UACE,wBAAOE,QAAQ,aAAf,UACE,sBAAMF,UAAU,SAAhB,2BACA,uBACEG,GAAG,aACHnD,KAAK,OACLoD,OAAO,UACPC,SAAUpB,EACVqB,MAAO,CAAEC,QAAS,QAClBC,UAAQ,OAIZ,wBACEC,QAASlD,EACTyC,UAAU,SACVU,SAAoC,IAA1B3B,EAAekB,OAH3B,iCCvDRU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.44914f55.chunk.js","sourcesContent":["export class CustomImage extends Image {\n  constructor(public mimeType: string) {\n    super();\n  }\n\n  get imageType(): string {\n    return this.mimeType.split(\"/\")[1];\n  }\n}\n","import jsPDF from \"jspdf\";\n\nimport { CustomImage } from \"./custom-image\";\n\nconst A4_PAPER_DIMENSIONS = {\n  width: 210,\n  height: 297,\n};\n\nconst A4_PAPER_RATIO = A4_PAPER_DIMENSIONS.width / A4_PAPER_DIMENSIONS.height;\n\ninterface ImageDimension {\n  width: number;\n  height: number;\n}\n\nexport const imageDimensionsOnA4 = (dimensions: ImageDimension) => {\n  const isLandscapeImage = dimensions.width >= dimensions.height;\n\n  if (isLandscapeImage) {\n    return {\n      width: A4_PAPER_DIMENSIONS.width,\n      height:\n        A4_PAPER_DIMENSIONS.width / (dimensions.width / dimensions.height),\n    };\n  }\n\n  const imageRatio = dimensions.width / dimensions.height;\n  if (imageRatio > A4_PAPER_RATIO) {\n    const imageScaleFactor =\n      (A4_PAPER_RATIO * dimensions.height) / dimensions.width;\n\n    const scaledImageHeight = A4_PAPER_DIMENSIONS.height * imageScaleFactor;\n\n    return {\n      height: scaledImageHeight,\n      width: scaledImageHeight * imageRatio,\n    };\n  }\n\n  return {\n    width: A4_PAPER_DIMENSIONS.height / (dimensions.height / dimensions.width),\n    height: A4_PAPER_DIMENSIONS.height,\n  };\n};\n\nexport const fileToImageURL = (file: File): Promise<CustomImage> => {\n  return new Promise((resolve, reject) => {\n    const image = new CustomImage(file.type);\n\n    image.onload = () => {\n      resolve(image);\n    };\n\n    image.onerror = () => {\n      reject(new Error(\"Failed to convert File to Image\"));\n    };\n\n    image.src = URL.createObjectURL(file);\n  });\n};\n\nexport const generatePdfFromImages = (images: CustomImage[]) => {\n  const doc = new jsPDF();\n  doc.deletePage(1);\n\n  images.forEach((image) => {\n    const imageDimensions = imageDimensionsOnA4({\n      width: image.width,\n      height: image.height,\n    });\n\n    doc.addPage();\n    doc.addImage(\n      image.src,\n      image.imageType,\n      (A4_PAPER_DIMENSIONS.width - imageDimensions.width) / 2,\n      (A4_PAPER_DIMENSIONS.height - imageDimensions.height) / 2,\n      imageDimensions.width,\n      imageDimensions.height\n    );\n  });\n\n  const pdfURL = doc.output(\"bloburl\");\n  window.open(pdfURL as any, \"_blank\");\n};\n","import React, { ChangeEventHandler } from \"react\";\n\nimport * as Helpers from \"./helpers\";\nimport { CustomImage } from \"./custom-image\";\nimport \"./App.css\";\n\nfunction App() {\n  const [uploadedImages, setUploadedImages] = React.useState<CustomImage[]>([]);\n\n  const handleImageUpload = React.useCallback<\n    ChangeEventHandler<HTMLInputElement>\n  >(\n    (event) => {\n      const fileList = event.target.files;\n      const fileArray = fileList ? Array.from(fileList) : [];\n      const fileToImagePromises = fileArray.map(Helpers.fileToImageURL);\n\n      Promise.all(fileToImagePromises).then(setUploadedImages);\n    },\n    [setUploadedImages]\n  );\n\n  const cleanUpUploadedImages = React.useCallback(() => {\n    setUploadedImages([]);\n    uploadedImages.forEach((image) => {\n      URL.revokeObjectURL(image.src);\n    });\n  }, [setUploadedImages, uploadedImages]);\n\n  const generatePdfFromImages = React.useCallback(() => {\n    Helpers.generatePdfFromImages(uploadedImages);\n    cleanUpUploadedImages();\n  }, [uploadedImages, cleanUpUploadedImages]);\n\n  return (\n    <>\n      <h1>Convert images to PDFs</h1>\n\n      <div className=\"images-container\">\n        {uploadedImages.length > 0 ? (\n          uploadedImages.map((image) => (\n            <img key={image.src} src={image.src} className=\"uploaded-image\" />\n          ))\n        ) : (\n          <p>Upload some images...</p>\n        )}\n      </div>\n\n      <div className=\"buttons-container\">\n        <label htmlFor=\"file-input\">\n          <span className=\"button\">Upload images</span>\n          <input\n            id=\"file-input\"\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={handleImageUpload}\n            style={{ display: \"none\" }}\n            multiple\n          />\n        </label>\n\n        <button\n          onClick={generatePdfFromImages}\n          className=\"button\"\n          disabled={uploadedImages.length === 0}\n        >\n          Generate PDF\n        </button>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}